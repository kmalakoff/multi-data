{"version":3,"file":"multi-data.js","sources":["../../src/index.ts"],"sourcesContent":["export interface HeadersObject {\n  [key: string]: string;\n}\n\nexport interface Options {\n  headers?: HeadersObject;\n}\n\n/**\n * Class to build and concatenate multipart form data\n */\nexport default class MultiData {\n  readonly boundary: string;\n  protected lines: string[] = [];\n\n  /**\n   * @param boundary The string used to define multipart boundaries and the end of body.\n   */\n  constructor(boundary: string) {\n    if (boundary === undefined) throw new TypeError(\"boundary expected\");\n    this.boundary = boundary;\n  }\n\n  /**\n   * Append a part to the multipart form data.\n   *\n   * @param name The part name.\n   * @param data The part data.\n   * @param options Pass headers in the options for custom part headers.\n   */\n  append(name: string, data: string, options?: Options): MultiData {\n    if (name === undefined) throw new TypeError(\"name expected\");\n    if (data === undefined) throw new TypeError(\"data expected\");\n\n    this.lines.push(`--${this.boundary}`);\n    this.lines.push(`Content-Disposition: form-data; name=\"${name}\"`);\n    if (options && options.headers) {\n      const headers = options.headers;\n      for (const key in headers) this.lines.push(`${key}: ${headers[key]}`);\n    }\n    this.lines.push(\"\");\n    this.lines.push(data);\n    return this;\n  }\n\n  /**\n   * After appending data, use toString() to concatenate the form data for your request.\n   */\n  toString(): string {\n    this.lines.push(`--${this.boundary}--`);\n    const string = this.lines.join(\"\\r\\n\");\n    this.lines.pop();\n    return string;\n  }\n}\n"],"names":["MultiData","boundary","undefined","TypeError","name","data","options","lines","push","headers","key","string","join","pop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAQA;EACA;EACA;MACqBA;EAInB;EACF;EACA;EACE,EAAA,SAAA,SAAA,CAAYC,QAAZ,EAA8B;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EALF,EAKE,CAAA,CAAA;;MAC5B,IAAIA,QAAQ,KAAKC,SAAjB,EAA4B,MAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN,CAAA;MAC5B,IAAKF,CAAAA,QAAL,GAAgBA,QAAhB,CAAA;EACD,GAAA;EAED;EACF;EACA;EACA;EACA;EACA;EACA;;;;;EACE,IAAA,KAAA,EAAA,SAAA,MAAA,CAAOG,IAAP,EAAqBC,IAArB,EAAmCC,OAAnC,EAAiE;QAC/D,IAAIF,IAAI,KAAKF,SAAb,EAAwB,MAAM,IAAIC,SAAJ,CAAc,eAAd,CAAN,CAAA;QACxB,IAAIE,IAAI,KAAKH,SAAb,EAAwB,MAAM,IAAIC,SAAJ,CAAc,eAAd,CAAN,CAAA;EAExB,MAAA,IAAA,CAAKI,KAAL,CAAWC,IAAX,CAAA,IAAA,CAAA,MAAA,CAAqB,KAAKP,QAA1B,CAAA,CAAA,CAAA;EACA,MAAA,IAAA,CAAKM,KAAL,CAAWC,IAAX,CAAA,yCAAA,CAAA,MAAA,CAAyDJ,IAAzD,EAAA,IAAA,CAAA,CAAA,CAAA;;EACA,MAAA,IAAIE,OAAO,IAAIA,OAAO,CAACG,OAAvB,EAAgC;EAC9B,QAAA,IAAMA,OAAO,GAAGH,OAAO,CAACG,OAAxB,CAAA;;UACA,KAAK,IAAMC,IAAX,IAAkBD,OAAlB,EAAA;YAA2B,IAAKF,CAAAA,KAAL,CAAWC,IAAX,CAAA,EAAA,CAAA,MAAA,CAAmBE,IAAnB,EAA2BD,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,OAAO,CAACC,IAAD,CAAlC,CAAA,CAAA,CAAA;EAA3B,SAAA;EACD,OAAA;;EACD,MAAA,IAAA,CAAKH,KAAL,CAAWC,IAAX,CAAgB,EAAhB,CAAA,CAAA;EACA,MAAA,IAAA,CAAKD,KAAL,CAAWC,IAAX,CAAgBH,IAAhB,CAAA,CAAA;EACA,MAAA,OAAO,IAAP,CAAA;EACD,KAAA;EAED;EACF;EACA;;;;aACE,SAAmB,QAAA,GAAA;EACjB,MAAA,IAAA,CAAKE,KAAL,CAAWC,IAAX,CAAA,IAAA,CAAA,MAAA,CAAqB,KAAKP,QAA1B,EAAA,IAAA,CAAA,CAAA,CAAA;QACA,IAAMU,MAAM,GAAG,IAAKJ,CAAAA,KAAL,CAAWK,IAAX,CAAgB,MAAhB,CAAf,CAAA;QACA,IAAKL,CAAAA,KAAL,CAAWM,GAAX,EAAA,CAAA;EACA,MAAA,OAAOF,MAAP,CAAA;EACD,KAAA;;;;;;;;;;;;"}