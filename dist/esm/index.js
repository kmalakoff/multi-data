class s{lines=[];constructor(s){if(void 0===s)throw new TypeError("boundary expected");this.boundary=s}append(s,e,i){if(void 0===s)throw new TypeError("name expected");if(void 0===e)throw new TypeError("data expected");if(this.lines.push(`--${this.boundary}`),this.lines.push(`Content-Disposition: form-data; name="${s}"`),i&&i.headers){const s=i.headers;for(const e in s)this.lines.push(`${e}: ${s[e]}`)}return this.lines.push(""),this.lines.push(e),this}toString(){this.lines.push(`--${this.boundary}--`);const s=this.lines.join("\r\n");return this.lines.pop(),s}}export{s as default};
//# sourceMappingURL=index.js.map
